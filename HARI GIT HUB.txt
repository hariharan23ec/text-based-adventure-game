import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.*;

public class SearchEngineSystem {
    private JFrame frame;
    private JTextField searchField;
    private JButton searchButton, indexButton;
    private JTable resultTable;
    private DefaultTableModel tableModel;
    private Map<String, Set<String>> index;

    public SearchEngineSystem() {
        index = new HashMap<>();
        initializeUI();
    }

    private void initializeUI() {
        frame = new JFrame("Search Engine System");
        frame.setSize(800, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        // Top panel
        JPanel topPanel = new JPanel(new FlowLayout());
        searchField = new JTextField(30);
        searchButton = new JButton("Search");
        indexButton = new JButton("Index Documents");

        topPanel.add(searchField);
        topPanel.add(searchButton);
        topPanel.add(indexButton);

        // Table for displaying results
        tableModel = new DefaultTableModel(new String[]{"File Name", "File Path"}, 0);
        resultTable = new JTable(tableModel);

        frame.add(topPanel, BorderLayout.NORTH);
        frame.add(new JScrollPane(resultTable), BorderLayout.CENTER);

        // Event listeners
        addEventHandlers();

        frame.setVisible(true);
    }

    private void addEventHandlers() {
        indexButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                indexDocuments();
            }
        });

        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                searchDocuments();
            }
        });
    }

    private void indexDocuments() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fileChooser.showOpenDialog(frame);

        if (result == JFileChooser.APPROVE_OPTION) {
            File folder = fileChooser.getSelectedFile();
            index.clear();
            tableModel.setRowCount(0);

            File[] files = folder.listFiles();
            if (files == null) {
                JOptionPane.showMessageDialog(frame, "No files found in the selected directory.");
                return;
            }

            for (File file : files) {
                if (file.isFile() && file.getName().endsWith(".txt")) {
                    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                        String line;
                        while ((line = reader.readLine()) != null) {
                            for (String word : line.split("\\s+")) {
                                word = word.toLowerCase().replaceAll("[^a-zA-Z0-9]", "");
                                index.computeIfAbsent(word, k -> new HashSet<>()).add(file.getAbsolutePath());
                            }
                        }
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(frame, "Error reading file: " + file.getName());
                        ex.printStackTrace();
                    }
                }
            }
            JOptionPane.showMessageDialog(frame, "Indexing completed!");
        }
    }

    private void searchDocuments() {
        String query = searchField.getText().trim().toLowerCase();
        if (query.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please enter a search query.");
            return;
        }

        Set<String> resultPaths = index.getOrDefault(query, Collections.emptySet());
        tableModel.setRowCount(0);

        for (String path : resultPaths) {
            File file = new File(path);
            tableModel.addRow(new Object[]{file.getName(), file.getAbsolutePath()});
        }

        if (resultPaths.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "No results found for: " + query);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(SearchEngineSystem::new);
    }
}